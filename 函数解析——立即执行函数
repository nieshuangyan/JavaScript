一、函数概述
1.函数声明：使用function关键字指定一个函数名声明一个函数
f1();
function f1(){
    console.log('Hello World'); //正常，Hello World
}

2.函数表达式：使用function关键字声明一个函数，未给函数命名，最后将匿名函数赋予一个变量
***函数调用必须在函数表达式之后***
f2();
var f2=function(){
    console.log('Hello World'); //报错：Uncaught TypeError: f2 is not a function(…)
}

var f3=function(){
    console.log('Hello World'); 
}; 
f3();//正常，Hello World

3.匿名函数：（function () {}; ）
***匿名函数有很多作用，赋予一个变量则创建函数，赋予一个事件则成为事件处理程序或创建闭包等等***


二、函数声明、函数表达式和匿名函数不同之处
1.Javascript引擎在解析javascript代码时会‘函数声明提升’（Function declaration Hoisting）当前执行环境（作用域）上的函数声明，而函数表达式必须等到Javascirtp引擎执行到它所在行时，才会从上而下一行一行地解析函数表达式;
2.函数表达式与函数声明后面可以加括号(可以传递参数)立即调用该函数，但是匿名函数不行;
function f4(){
console.log('Hello World'); //报错，Uncaught SyntaxError: Unexpected token )(…)
}();

function f5(a){
console.log(a); 
}(1);                 //正确，1

var f6=function(a){
console.log(a); 
}(1);                 //正确，1

function(){
console.log('Hello World'); //报错，Uncaught SyntaxError: Unexpected token ((…)
}(); 


三、匿名函数变立即执行函数
1.在function前面加！、+、 -甚至是逗号等到都可以起到函数定义后立即执行的效果
!function(a){
    console.log(a);   //正确，12345
}(12345);

!function(a){
    console.log(a);   //正确，12345
}(12345);

+function(a){
    console.log(a);   //正确，12345
}(12345);

-function(a){
    console.log(a);   //正确，12345
}(12345);

2.使用括号(***推荐使用***)
(function(a){
    console.log(a);   //正确，12
})(12);

(function(a){
    console.log(a);   //正确，122
}(122));
